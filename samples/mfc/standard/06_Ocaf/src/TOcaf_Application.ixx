// File generated by CPPExt (Transient)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
#include <TOcaf_Application.jxx>

#ifndef _Standard_TypeMismatch_HeaderFile
#include <Standard_TypeMismatch.hxx>
#endif

TOcaf_Application::~TOcaf_Application() {}

// DownCast method
//   allow safe downcasting
//
const Handle(TOcaf_Application) TOcaf_Application::DownCast(const Handle(Standard_Transient)& AnObject) 
{
  Handle(TOcaf_Application) _anOtherObject;

  if (!AnObject.IsNull()) {
     if (AnObject->IsKind(STANDARD_TYPE(TOcaf_Application))) {
       _anOtherObject = Handle(TOcaf_Application)((Handle(TOcaf_Application)&)AnObject);
     }
  }

  return _anOtherObject ;
}
const Handle(Standard_Type)& TOcaf_Application::DynamicType() const 
{ 
  return STANDARD_TYPE(TOcaf_Application) ; 
}
Standard_Boolean TOcaf_Application::IsKind(const Handle(Standard_Type)& AType) const 
{ 
  return (STANDARD_TYPE(TOcaf_Application) == AType || TDocStd_Application::IsKind(AType)); 
}


